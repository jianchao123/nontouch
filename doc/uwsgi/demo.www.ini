# 测试
[uwsgi]
plugins = python
env = NONTOUCH_1=PRO
# 用于和nginx进行数据交互的端口
socket = 127.0.0.1:5000
# 虚拟环境
virtualenv = /home/transadm/envs/nontouch_1
# 程序主目录
chdir = /home/transadm/vhost/nontouch_1/src
# 编写flask代码的py文件
wsgi-file = app.py
# Flask应用对象
callable = app
# 启动主进程,来管理其他进程
master = true
# uwsgi启动的进程数,可设为机器核数+1
processes = 5
# 每个工作进程中启动的线程数量
threads = 1
# 协议
protocol = http
# 设置退出后清理文件
vacuum = true
chmod-socket = 664
# 监听队列大小,默认100,太小了一压测队列就满了,调大一点
listen = 128
# root用户权限
master-as-root = true
# 防止惊群
thunder-lock = true
# 超时时间（秒）
harakiri = 60
# 不记录请求信息的日志.只记录错误以及uWSGI内部消息到日志中
disable-logging = true
# 日志
daemonize=/data/logs/uwsgi/uwsgi.log
# 使得uwsgi.log文件被转存后能继续在uwsgi.log文件中写入日志,且不会中断当前程序的执行
#touch-logreopen =/data/log/uwsgi/.touchforlogrotat